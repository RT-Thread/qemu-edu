import os
import sys
from building import *

cwd = GetCurrentDir()

# Import usrapp build module
sys.path.append(os.path.join(cwd, 'tools'))
from build_usrapp import build_example_usrapp


def _has(sym: str) -> bool:
    """Helper function to check if a configuration symbol is enabled."""
    try:
        return bool(GetDepend([sym]))
    except Exception:
        return bool(GetDepend(sym))


def load_extended_feature_configs():
    """
    Load extended feature configurations if available.
    This allows users to add custom configuration mappings.
    """
    try:
        from feature_config_examples import setup_all_example_features
        setup_all_example_features()
        print("Extended feature configurations loaded successfully.")
    except ImportError:
        print("Using default feature configurations.")


# Early return if Rust is not enabled
if not _has('RT_USING_RUST'):
    group = []
    Return('group')

# Load extended feature configurations
load_extended_feature_configs()

# Source files – component glue code if needed
src = []
LIBS = []
LIBPATH = []
LINKFLAGS = ""

# Handle clean operation
if GetOption('clean'):
    # Clean the example_usrapp build directory
    build_dir = os.path.join(Dir('#').abspath, "build", "example_usrapp")
    if os.path.exists(build_dir):
        print("Cleaning example_usrapp build artifacts…")
        import shutil
        try:
            shutil.rmtree(build_dir)
            print("Example_usrapp build artifacts cleaned")
        except Exception as e:
            print(f"Warning: Failed to clean example_usrapp artifacts: {e}")
    else:
        print("No example_usrapp build artifacts to clean")
else:
    # Build the user applications using the extracted build module
    import rtconfig
    LIBS, LIBPATH, LINKFLAGS = build_example_usrapp(
        cwd=cwd,
        has_func=_has,
        rtconfig=rtconfig,
        clean_func=None,
        build_root=os.path.join(Dir('#').abspath, "build", "example_usrapp")
    )

# Define component group for SCons
group = DefineGroup(
    'example_usrapp', 
    src, 
    depend=['RT_USING_RUST'], 
    LIBS=[], 
    LIBPATH=[], 
    LINKFLAGS=LINKFLAGS
)

Return('group')